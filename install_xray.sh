#!/bin/bash

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ===
XRAY_CONFIG_DIR="/usr/local/etc/xray"
CLIENT_CONFIG_DIR="/etc/xray/client_configs"
SSL_DIR="/etc/ssl/vless"
MARKER_FILE="/etc/xray/.installed"
GENERATE_SCRIPT="/usr/local/bin/generate_client_config"
INSTALL_LOG="/var/log/xray/install.log"

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root ===
if [ "$(id -u)" != "0" ]; then
    echo "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root"
    exit 1
fi

# === –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
exec > >(tee -a "$INSTALL_LOG") 2>&1

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–∞ ===
check_domain() {
    if ! getent hosts "$DOMAIN" >/dev/null; then
        echo "‚ùå –î–æ–º–µ–Ω '$DOMAIN' –Ω–µ —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DNS-–∑–∞–ø–∏—Å–∏."
        exit 1
    fi
}

# === –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π ===
create_directories() {
    echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    mkdir -p "$XRAY_CONFIG_DIR" "$CLIENT_CONFIG_DIR" "$SSL_DIR" "/var/log/xray"
    touch /var/log/xray/{access.log,error.log}
    chown -R nobody:nogroup /var/log/xray
    chmod -R 755 /var/log/xray
}

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ===
install_dependencies() {
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    apt update > /dev/null
    apt install -y curl qrencode ufw cron certbot > /dev/null
}

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Xray ===
install_xray() {
    echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Xray..."
    bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" @ install
    systemctl enable xray > /dev/null
}

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ ===
setup_certificates() {
    echo "üîê –ü–æ–ª—É—á–µ–Ω–∏–µ TLS-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–ª—è $DOMAIN..."
    certbot certonly --standalone -d "$DOMAIN" --email "$EMAIL" \
        --agree-tos --non-interactive --key-type ecdsa || {
        echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
        exit 1
    }

    cp "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" "$SSL_DIR/fullchain.cer"
    cp "/etc/letsencrypt/live/$DOMAIN/privkey.pem" "$SSL_DIR/private.key"

    chown -R nobody:nogroup "$SSL_DIR"
    chmod 600 "$SSL_DIR/private.key"
    chmod 644 "$SSL_DIR/fullchain.cer"

    (crontab -l 2>/dev/null; echo "0 3 * * * certbot renew --quiet --post-hook \"systemctl restart xray\"") | crontab -
}

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–µ—Ä–≤–æ–ª–∞ ===
setup_firewall() {
    echo "üõ° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW..."
    ufw allow 443/tcp > /dev/null
    ufw --force enable > /dev/null
}

# === –ì–µ–Ω–µ—Ä–∞—Ü–∏—è UUID –∏ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ ===
generate_server_config() {
    echo "üß© –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Xray..."
    local config_file="$XRAY_CONFIG_DIR/config.json"
    clients=()

    for i in $(seq 1 "$NUM_DEVICES"); do
        UUIDs[i]=$(xray uuid)
        clients+=("{
            \"id\": \"${UUIDs[i]}\",
            \"flow\": \"xtls-rprx-vision\",
            \"email\": \"device-$i\"
        }")
    done

    cat > "$config_file" <<EOF
{
  "log": {
    "loglevel": "warning",
    "access": "/var/log/xray/access.log",
    "error": "/var/log/xray/error.log"
  },
  "inbounds": [{
    "port": 443,
    "protocol": "vless",
    "settings": {
      "clients": [${clients[*]}],
      "decryption": "none"
    },
    "streamSettings": {
      "network": "tcp",
      "security": "tls",
      "tlsSettings": {
        "certificates": [{
          "certificateFile": "$SSL_DIR/fullchain.cer",
          "keyFile": "$SSL_DIR/private.key"
        }],
        "alpn": ["h2", "http/1.1"]
      }
    }
  }],
  "outbounds": [{
    "protocol": "freedom"
  }]
}
EOF

    systemctl restart xray
}

# === –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤ ===
generate_client_configs() {
    echo "üì§ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤..."
    mkdir -p "$CLIENT_CONFIG_DIR"

    for i in $(seq 1 "$NUM_DEVICES"); do
        cat > "$CLIENT_CONFIG_DIR/client_$i.json" <<EOF
{
  "outbounds": [{
    "protocol": "vless",
    "settings": {
      "vnext": [{
        "address": "$DOMAIN",
        "port": 443,
        "users": [{
          "id": "${UUIDs[i]}",
          "flow": "xtls-rprx-vision"
        }]
      }]
    },
    "streamSettings": {
      "network": "tcp",
      "security": "tls"
    }
  }]
}
EOF
    done
}

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ç–∏–ª–∏—Ç—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–æ–∫ ===
install_generate_script() {
    cat > "$GENERATE_SCRIPT" <<'EOF'
#!/bin/bash

CONFIG_DIR="/etc/xray/client_configs"
DOMAIN=$(grep DOMAIN /etc/xray/.installed | cut -d= -f2)
FLOW="xtls-rprx-vision"
PORT=443

mapfile -t config_files < <(find "$CONFIG_DIR" -maxdepth 1 -name '*.json' | sort)

if [ ${#config_files[@]} -eq 0 ]; then
  echo "‚ùå –ö–æ–Ω—Ñ–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
  exit 1
fi

echo -e "\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥–∏:"
for i in "${!config_files[@]}"; do
  echo "$((i+1)). ${config_files[$i]##*/}"
done

read -p "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥ (1-${#config_files[@]}): " choice
if ! [[ "$choice" =~ ^[0-9]+$ ]] || [ "$choice" -lt 1 ] || [ "$choice" -gt ${#config_files[@]} ]; then
  echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!"
  exit 1
fi

selected="${config_files[$((choice-1))]}"
UUID=$(grep -oP '(?<="id": ")[^"]+' "$selected" | head -1)
VLESS_URL="vless://${UUID}@${DOMAIN}:${PORT}?flow=${FLOW}&security=tls&type=tcp#${selected##*/}"

echo -e "\n–°—Å—ã–ª–∫–∞:"
echo "$VLESS_URL"
echo -e "\nQR-–∫–æ–¥:"
qrencode -t UTF8 "$VLESS_URL"
EOF

    chmod +x "$GENERATE_SCRIPT"
}

# === –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ–≥–æ ===
uninstall_all() {
    echo "üßπ –£–¥–∞–ª–µ–Ω–∏–µ Xray –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
    bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" @ remove
    rm -rf "$XRAY_CONFIG_DIR" "$CLIENT_CONFIG_DIR" "$SSL_DIR" "$GENERATE_SCRIPT"
    rm -f /var/log/xray/{access.log,error.log}
    crontab -l | grep -v "certbot renew" | crontab -
    ufw delete allow 443/tcp > /dev/null
    ufw --force disable > /dev/null
    rm -f "$MARKER_FILE"
    echo "‚úÖ –£–¥–∞–ª–µ–Ω–æ"
}

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
main_menu() {
    echo -e "\n==== Xray –ú–µ–Ω—é ===="
    echo "1. –ü–æ–∫–∞–∑–∞—Ç—å QR-–∫–æ–¥"
    echo "2. –£–¥–∞–ª–∏—Ç—å Xray"
    echo "3. –í—ã–π—Ç–∏"
    read -p "–í—ã–±–æ—Ä: " choice
    case $choice in
        1) "$GENERATE_SCRIPT" ;;
        2) uninstall_all ;;
        3) exit 0 ;;
        *) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"; main_menu ;;
    esac
}

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–ª–∞–≥–∞ headless ===
if [ "$1" == "--headless" ]; then
    DOMAIN="$2"
    EMAIL="$3"
    NUM_DEVICES="$4"
    if [[ -z "$DOMAIN" || -z "$EMAIL" || -z "$NUM_DEVICES" ]]; then
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 --headless <–¥–æ–º–µ–Ω> <email> <–∫–æ–ª-–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤>"
        exit 1
    fi
else
    echo -e "\n=== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Xray-—Å–µ—Ä–≤–µ—Ä–∞ ==="
    read -p "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω: " DOMAIN
    read -p "Email –¥–ª—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: " EMAIL
    read -p "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: " NUM_DEVICES
fi

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ===
if [ -f "$MARKER_FILE" ]; then
    echo "‚ö†Ô∏è Xray —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    main_menu
    exit 0
fi

# === –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ===
check_domain
create_directories
install_dependencies
install_xray
setup_certificates
setup_firewall

declare -A UUIDs
generate_server_config
generate_client_configs
install_generate_script

echo -e "DOMAIN=$DOMAIN\nEMAIL=$EMAIL\nNUM_DEVICES=$NUM_DEVICES" > "$MARKER_FILE"

echo -e "\n‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'generate_client_config' –¥–ª—è –≤—ã–≤–æ–¥–∞ –∫–æ–Ω—Ñ–∏–≥–æ–≤."

